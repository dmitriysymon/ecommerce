const express = require("express");
const fs = require("fs");
const PDFDocument = require("pdfkit");
const path = require("path");
const { sendTelegramMessage, sendTelegramFile } = require("../utils/telegram");
const axios = require("axios");

const router = express.Router();

router.post("/send-order", async (req, res) => {
  try {
    console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", req.body);

    const {
      name,
      lastname,
      phone,
      email,
      novaPoshtaBranch,
      cartItems,
      totalPrice,
    } = req.body;

    if (
      !name ||
      !lastname ||
      !phone ||
      !email ||
      !novaPoshtaBranch ||
      !cartItems.length
    ) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ", req.body);
      return res.status(400).json({ error: "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è" });
    }

    // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const orderMessage = `
üõí *–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!* üõí

üë§ *–Ü–º'—è:* ${name} ${lastname}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}
‚úâÔ∏è *Email:* ${email}
üè§*–ù–æ–≤–∞ –ü–æ—à—Ç–∞:* ${novaPoshtaBranch}

üì¶ *–ó–∞–º–æ–≤–ª–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏:*
${cartItems
  .map(
    (item, index) => `${index + 1}. ${item.name} (x${item.quantity}) - ‚Ç¥${
      item.price * item.quantity
    }
    –û–ø–∏—Å: ${item.description}
    –ê—Ä—Ç: ${item.sku}`
  )
  .join("\n")}

üí∞ *–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞:* ‚Ç¥${totalPrice}
    `;

    console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram...");
    await sendTelegramMessage(orderMessage);

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è PDF
    const doc = new PDFDocument();
    const filePath = path.join(__dirname, `order_${Date.now()}.pdf`);
    const stream = fs.createWriteStream(filePath);
    doc.pipe(stream);

    const fontPath = path.join(__dirname, "..", "fonts", "DejaVuSans.ttf");
    doc.font(fontPath);

    doc.fontSize(20).text("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è", { align: "center" });
    doc.moveDown();
    doc.fontSize(14).text(`–Ü–º'—è: ${name} ${lastname}`);
    doc.text(`–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`);
    doc.text(`Email: ${email}`);
    doc.text(`–ù–æ–≤–∞ –ü–æ—à—Ç–∞: ${novaPoshtaBranch}`);
    doc.moveDown();
    doc.text("üì¶ –ó–∞–º–æ–≤–ª–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏:");
    let yPosition = doc.y; // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫—É—Ä—Å–æ—Ä–∞
    
    for (const [index, item] of cartItems.entries()) {
      // –î–æ–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç —Ç–æ–≤–∞—Ä—É
      doc.text(`${index + 1}. ${item.name} (x${item.quantity}) - ‚Ç¥${item.price * item.quantity}`);
      doc.text(`   –û–ø–∏—Å: ${item.description}`);
      doc.text(`   –ê—Ä—Ç–∏–∫—É–ª: ${item.sku}`);
    
      // –Ø–∫—â–æ —î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —Ç–æ –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
      if (item.image_url) {
        try {
          const imageResponse = await axios({ url: item.image_url, responseType: "arraybuffer" });
          const imagePath = path.join(__dirname, `temp_image_${index}.jpg`);
          fs.writeFileSync(imagePath, imageResponse.data);
    
          // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –Ω–æ–≤—É –ø–æ–∑–∏—Ü—ñ—é –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –Ω–∞–∫–ª–∞–¥–µ–Ω–Ω—è
          const imageWidth = 100;  // –†–æ–∑–º—ñ—Ä –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          const imageHeight = 100;
          
          // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          doc.image(imagePath, {
            fit: [imageWidth, imageHeight],
            align: 'right',
            valign: 'top',
            x: 450, // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ X –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            y: yPosition + 10 // –î–æ–¥–∞—î–º–æ –≤—ñ–¥—Å—Ç—É–ø, —â–æ–± –Ω–µ –Ω–∞–∫–ª–∞–¥–∞—Ç–∏ –Ω–∞ —Ç–µ–∫—Å—Ç
          });
    
          // –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –ø—ñ—Å–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          yPosition = doc.y;
    
          // –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          fs.unlinkSync(imagePath);
        } catch (error) {
          console.error(`‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è ${item.name}:`, error.message);
        }
      }
    
      doc.moveDown();  // –î–æ–¥–∞—î–º–æ –≤—ñ–¥—Å—Ç—É–ø –ø—ñ—Å–ª—è —Ç–æ–≤–∞—Ä—É –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –Ω–∞–∫–ª–∞–¥–µ–Ω–Ω—è
    }
    
    doc.text(`üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ‚Ç¥${totalPrice}`);
    doc.end();

    stream.on("finish", async () => {
      console.log("üìÑ PDF-—Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ:", filePath);

      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ PDF —É Telegram
      await sendTelegramFile(filePath);

      // –í–∏–¥–∞–ª–µ–Ω–Ω—è PDF –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
      fs.unlink(filePath, (err) => {
        if (err) console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ PDF:", err);
        else console.log("üóëÔ∏è PDF-—Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ");
      });

      res.json({ success: true, message: "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram" });
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", error);
    res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" });
  }
});

module.exports = router;
